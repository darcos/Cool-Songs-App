{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["WebFont","load","google","families","SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSong","renderList","React","Component","connect","state","console","log","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"6OAKAA,EAAQC,KAAK,CACTC,OAAQ,CACNC,SAAU,CAAC,+BAAgC,kBAI3CC,uLACU,IAAAC,EAAAC,KACR,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAACC,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC5BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAkBG,QAAS,kBAAMZ,EAAKE,MAAMW,WAAWR,KAAzE,WAELC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKM,2CAMzC,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBR,KAAKa,qBAd7BC,IAAMC,WAqBdC,cAJS,SAACC,GAErB,OADAC,QAAQC,IAAIF,GACL,CAACf,MAAOe,EAAMf,QAEe,CAACU,WC9Bf,SAACR,GAC3B,MAAO,CACHgB,KAAM,gBACNC,QAASjB,KD2BEY,CAAuClB,GENvCkB,cALS,SAACC,GACrB,MAAO,CAAEb,KAAMa,EAAMK,eAIVN,CAvBI,SAAAO,GAAc,IAAXnB,EAAWmB,EAAXnB,KAClB,OAAKA,EAMDC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,mBACQH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFA,aAGWH,EAAKoB,WAVTnB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,mCCcLkB,EAfH,WACZ,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAACmB,EAAD,OAEArB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACoB,EAAD,UCUDC,cAAiB,CAC5B1B,MApBiB,WACrB,MAAO,CAEH,CAACQ,MAAO,4BAA6Bc,SAAW,QAChD,CAACd,MAAO,kBAAmBc,SAAW,QACtC,CAACd,MAAO,iBAAkBc,SAAW,QACrC,CAACd,MAAO,gBAAiBc,SAAW,QACpC,CAACd,MAAO,mBAAoBc,SAAW,UAcvCF,aATwB,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,MAAoB,kBAAhBC,EAAOZ,KACAY,EAAOX,QAEPC,KCRfW,IAASC,OACT7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IACzBjC,EAAAC,EAAAC,cAACgC,EAAD,OAEJC,SAASC,cAAc","file":"static/js/main.e2819c6f.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Pacifico display:300,400,700', 'cursive']\n    }\n  });\n\nclass SongList extends React.Component {\n   renderList() {       \n        return this.props.songs.map((song) =>{\n            return (\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                     <button className=\"ui button purple\"onClick={() => this.props.selectSong(song)}>Select</button>\n                    </div>\n                <div className=\"content\">{song.title}</div>\n            </div>\n          )  \n      });\n   }\n   render() {\n      return <div className=\"ui divided list\">{this.renderList()}</div> \n   }\n}\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {songs: state.songs};\n};\nexport default connect(mapStateToProps, {selectSong})(SongList);\n","// Actions Creator\n\nexport const selectSong = (song) => {\nreturn {\n    type: 'SONG_SELECTED',\n    payload: song\n  };\n};\n\n","import React from \"react\";\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ song }) => {\n    if (!song) {\n        return <div><h3> Select a song... </h3></div>\n            \n        }\n    return (\n        \n        <div>\n        <h3> Song detail... </h3>\n        <p>\n        Title: {song.title}\n        <br />\n        Duration: {song.duration}\n        </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return { song: state.selectedSong };\n\n};\n\nexport default connect (mapStateToProps)(SongDetail);\n\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nconst App = () => {\nreturn (\n    <div className=\"ui container grid\">\n        <div className=\"ui row\">\n            <div className=\"column eight wide\">\n            <SongList />\n            </div>\n            <div className=\"column eight wide\">\n                <SongDetail />\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default App;\n","// REDUCERS INDEX\nimport {combineReducers} from 'redux';\n\nconst songsReducer = () => {\nreturn [\n    \n    {title: 'Straight outta of Compton', duration:  '3:15'},\n    {title: 'F**k tha Police', duration:  '4:05'},\n    {title: 'Gangsta Gangta', duration:  '2:59'},\n    {title: 'Lethal Weapon', duration:  '3:00'},\n    {title: 'Quiet on tha set', duration:  '2:99'},\n\n   ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if (action.type === 'SONG_SELECTED') {\n        return action.payload;\n    }\n        return selectedSong;\n};\n\nexport default combineReducers ({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\n\n\n\n\nReactDOM.render (\n<Provider store={createStore(reducers)}>\n    <App />\n</Provider>,\ndocument.querySelector('#root')\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}